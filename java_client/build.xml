<?xml version="1.0" encoding="UTF-8"?>
<project name="GameGround client" default="build" basedir=".">
	<property name="project" value="GameGround" />
	<description>
		Ant build file for ${project} project java client.
	</description>
	<!-- set global properties for this build -->
	<property name="src" location="." />
	<property name="lib" location="./lib" />
	<property name="build" location="build" />
	<property name="target" value="gameground.jar" />

	<target name="libs" unless="LibsAreReady">
		<unjar src="${lib}/commons-cli-1.1.jar" dest="${build}" />
		<unjar src="${lib}/jdom.jar" dest="${build}" />
		<unjar src="${lib}/forms-1.1.0.jar" dest="${build}" />
		<unjar src="${lib}/swixml.jar" dest="${build}" />
	</target>

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}" />
		<condition property="LibsAreReady">
			<available file="${build}/org/jdom/Document.class" />
		</condition>
		<copy todir="${build}/res">
			<fileset dir="res"/>
		</copy>
		<touch mkdirs="true" file="${build}/META-INF/info.xml" />
	</target>

	<target name="compile" depends="init" description="Compile the source.">
		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${src}" destdir="${build}" classpath="${src}:${lib}/commons-cli-1.1.jar:${lib}/jdom.jar:${lib}/swixml.jar" debug="true" includeantruntime="false">
			<compilerarg line="-Xlint -Werror" />
		</javac>
	</target>

	<target name="uptodatecheck">
		<condition property="NoChanges">
			<uptodate targetfile="${build}/${target}">
				<srcfiles dir= "${build}" includes="*.class"/>
				<srcfiles dir= "${build}/res" includes="*.*"/>
			</uptodate>
		</condition>
	</target>

	<target name="dist" unless="NoChanges" description="Create distribution archive.">
		<!-- Create class list for EagerInitializer.  -->
		<exec executable="sh" dir="${build}">
			<arg value="-c" />
			<arg value="find . -maxdepth 1 -name '*.class' -printf '%f\n' > class.list" />
		</exec>
		<!-- Put everything in ${build} into the MyProject.jar file -->
		<jar jarfile="${build}/${target}" basedir="${build}" excludes="${target}">
			<manifest>
				<attribute name="Main-Class" value="${project}" />
				<attribute name="Codebase" value="http://codestation.org/ https://codestation.org/ http://localhost:8080/" />
				<attribute name="Application-Name" value="${project} client" />
				<attribute name="Permissions" value="all-permissions" />
				<attribute name="Trusted-Only" value="true" />
			</manifest>
		</jar>
	</target>

	<target name="build" depends="compile,libs,uptodatecheck,dist" description="Build the application." />

	<target name="sign" depends="build" description="Sign the application.">
		<input message="Enter password for your keystore:" addproperty="keypass">
			<handler classname="org.apache.tools.ant.input.SecureInputHandler" />
		</input>
		<signjar keystore="codestation.jks" storepass="${keypass}" jar="${build}/${target}" alias="codestation" />
	</target>

	<target name="clean" description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}" />
	</target>
</project>

